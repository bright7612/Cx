<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/6/9
 * Time: 18:10
 */

namespace Admin\Controller;


use Admin\Builder\AdminConfigBuilder;
use Admin\Builder\AdminListBuilder;
use Think\Page;

class WxuserController extends AdminController
{
    private $wxuser  ; //微信用户表
    private $goods  ; //微信用户表

    function _initialize()
    {
        $this->wxuser = M('wxuser');
        $this->goods = M('goods');
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //微信用户页面
    public function index($page = 1,$r = 10)
    {
        $this->assign('title','微信用户');
        $stt = I('types');
        $nickname = I('nickname');
        if($nickname){
            $map['nickname'] = array('like',"%".$nickname."%");
        }
        $sta = array(
            100=>'全部',
            0 => '未参与党员微笑墙',
            1 => '参与党员微笑墙',
        );
        if($stt!=''&&$stt!=100){
            $map['wall'] = $stt;
        }else{
            $stt =100;
        }
        $this->assign('sta',$sta); //状态显示
        $this->assign('stt',$stt);//当前状态`
        $count = $this->wxuser->where($map)->count();
        $Page = new Page($count, $r);
        $show = $Page->show();
        $data = $this->wxuser->where($map)->limit($Page->firstRow . ',' . $Page->listRows)->order('id desc')->select();
        foreach ($data as $k=>&$v){
            $v['wall_var'] = $sta[$v['wall']];
        }
        $this->assign('data', $data); //报名信息
        $this->assign('pagination', $show);
        $this->display('index');

    }

    //积分商城
    public function goodslist($page = 1,$r = 10){
        $this->assign('title','商品列表');
        $stt = I('types');
        $nickname = I('nickname');
        if($nickname){
            $map['prod_name'] = array('like',"%".$nickname."%");
        }
        $sta = array(
            100=>'全部',
            0 => '已下架',
            1 => '销售中',
        );
        if($stt!=''&&$stt!=100){
            $map['state'] = $stt;
        }else{
            $stt =100;
        }
        $map['status'] = 1;
        $this->assign('sta',$sta); //状态显示
        $this->assign('stt',$stt);//当前状态`
        $count = $this->goods->where($map)->count();
        $Page = new Page($count, $r);
        $show = $Page->show();
        $data = $this->goods->where($map)->limit($Page->firstRow . ',' . $Page->listRows)->order('sort desc,prod_adddate desc')->select();
        foreach ($data as $k=>&$v){
            $v['state_var'] = $sta[$v['state']];
        }
        $this->assign('data', $data); //报名信息
        $this->assign('pagination', $show);
        $this->display('goodslist');

    }
    //添加商品
    public function  addgoods(){
        $id = I("id", 0, "intval");
        $act = $id ? "编辑" : "新增";
        if(IS_POST){
            $data=$_POST;
            $data['price'] = ceil($data['price']);
            if ($data["id"]) {
                $data['prod_lastdate'] = time();
                if ($this->goods->save($data) !== false) {
                    $this->success(L('_SUCCESS_UPDATE_'),'/admin/wxuser/goodslist');
                } else {
                    $this->error(L('_FAIL_UPDATE_'));
                }
            } else {

                $data['prod_adddate'] = time();
                $data['prod_lastdate'] = time();
                if ($this->goods->add($data) !== false) {
                    $this->success("添加成功", '/admin/wxuser/goodslist');
                } else {
                    $this->error("添加失败");
                }
            }

        }
        else{
            if($id){
                $data = $this->goods->where(array("id" => $id))->find();
            }
            $builder = NEW AdminConfigBuilder();
            $builder
                ->keyId()
                ->title('商品'.$act)
                ->keyText('prod_name','商品名称')
                ->keySingleImage('prod_pic','图片')
                ->key('price','价钱','整数','number')
                ->key('prod_num','剩余数量','','number')
                ->key('prod_sale','总销量','','number')
                ->key('sort','排序','','number')
                ->keyTextArea('prod_intr','商品简介')
                ->data($data)
                ->buttonSubmit()
                ->buttonBack()
                ->display();
        }

    }
    // 商品上架下架删除
    public function goodsdel(){
        $status = I('get.status', null, 'intval');
        $state = I('get.state', null, 'intval');
        $ids = I('id');
        $builder = new AdminListBuilder();
        if($status){
            $builder->doSetStatus('goods', $ids, $status);
        }elseif ($state||$state == 0){
            $builder->doSetState('goods', $ids, $state);

        }


    }

    //商品清单
    public function goodsorder($page = 1,$r = 10){
        $this->assign('title','订单列表');
        $stt = I('types');
        $nickname = I('nickname');
        if($nickname){
            $map['order'] = array('like',"%".$nickname."%");
        }
        $sta = array(
            100=>'全部',
            0 => '待审批',
            1 => '审批通过',
            -1 => '审批未通过',
            2 => '已领取',
        );
        if($stt!=''&&$stt!=100){
            $map['state'] = $stt;
        }else{
            $stt =100;
        }
        $map['status'] = 1;
        $this->assign('sta',$sta); //状态显示
        $this->assign('stt',$stt);//当前状态`

        $count = M('goods_order')->where($map)->count();
        $Page = new Page($count, $r);
        $show = $Page->show();
        $data = M('goods_order')->where($map)->limit($Page->firstRow . ',' . $Page->listRows)->order('cre_time desc')->select();
        foreach ($data as $k=>&$v) {
            $v['goods_var'] = $this->goods->where(array('id'=>$v['goods_id']))->find();
            $v['user_var'] = $this->wxuser->where(array('id'=>$v['user_id']))->find();
            $v['state_var'] = $sta[$v['state']];

        }
        $this->assign('data',$data);
        $this->assign('pagination', $show);
        $this->display('goodsorder');
    }

    public function orderdel(){
        $tableorder = M('goods_order');
        $tableuser = M('wxuser');
        $tablegoods = M('goods');
        $tableintegral = M('wxuser_integral');
        $tableorder -> startTrans();
        $tableuser -> startTrans();
        $tableintegral -> startTrans();
        $tablegoods -> startTrans();
        $state = I('get.state', null, 'intval');
        $ids = I('id');
        $ids = array_unique((array)$ids);
        $map['id'] = array('in',$ids);
        $map['status'] = 1;
        if($state == 1 || $state == -1){
            $map['state'] =0;
        }
        elseif ($state == 2 ){
            $map['state'] =1;
        }
//        dump($map);
//        dump($state);

        $data = $tableorder->where($map)->select();
//        dump($data);
//        exit;
        $sid = null;
        foreach ($data as $k=>$v){
            $sid=  $v['id'].','.$sid;
        }

        $rs = $tableorder->where(array('id' => array('in', $sid)))->save(array('state' => $state));

        if(empty($data)){
            $this->error('已审批订单无法再次审批！！！');
        }
        $a = true;
        if($state == -1){
            foreach ($data as $k=>$v){
                //用户积分退回
                $map3['id'] = $v['user_id'];
                $b = $tableuser->where($map3)->setInc('integral',$v['integral']);
                if(empty($b)){
                    $a = false;
                }

                //积分流动记录
                $da['user_id'] = $v['user_id'];
                $da['openid'] = $tableuser->where($map3)->getField('openid');
                $da['integral'] = $v['integral'];
                $da['classif'] = 4;
                $da['time'] = time();
                $da['text'] = '商品兑换：'.$tablegoods->where(array('id'=>$v['goods_id']))->getField('prod_name').'。审批未通过积分退回';
                $daid = $tableintegral->add($da);
                //商品数量流回
                $goods_num = $tablegoods->where(array('id'=>$v['goods_id']))->setInc('prod_num',$v['num']);

                unset($map3);
                unset($b);
                unset($da);
            }
        }
        if($rs&&$a&&$daid&&$goods_num){
            $tableuser ->commit();
            $tableorder ->commit();
            $tablegoods ->commit();
            $tableintegral ->commit();
            $this->success('审批成功');
        }else{
            $tableuser ->rollback();
            $tableorder ->rollback();
            $tablegoods ->rollback();
            $tableintegral ->rollback();
            $this->error('审批失败');
        }
    }


}